//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Diplom_project
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using Diplom_project.Models;
    public partial class Customer
    {
        public Customer()
        {
            this.adress = new HashSet<Adress>();
            this.purchase = new HashSet<Purchase>();
        }

        public int idCustomer { get; set; }
        [Required(ErrorMessage = "Поле {0} має бути заповнено")]
        [StringLength(50, ErrorMessage = "Поле {0} має бути довжиною не менше {2} літер", MinimumLength = 3)]
        [Display(Name = "Електронна адреса")]
        public string email { get; set; }

        [Required(ErrorMessage = "Поле {0} має бути заповнено")]
        [StringLength(50, ErrorMessage = "Поле {0} має бути довжиною не менше {2} літер", MinimumLength = 3)]
        [Display(Name = "І`мя")]
        public string firstName { get; set; }

        [Required(ErrorMessage = "Поле {0} має бути заповнено")]
        [StringLength(50, ErrorMessage = "Поле {0} має бути довжиною не менше {2} літер", MinimumLength = 3)]
        [Display(Name = "Фамілія")]
        public string lastName { get; set; }

        [Required(ErrorMessage = "Поле {0} має бути заповнено")]
        [StringLength(100, ErrorMessage = "Поле {0} має бути довжиною не менше {2} літер", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Пароль")]
        public string password { get; set; }

        [DataType(DataType.Password)]
        [Display(Name = "Підтвердження паролю")]
        [Compare("password", ErrorMessage = "Паролі не співпадають")]
        public string confirmPassword { get; set; }

        [Display(Name = "День народження")]
        [DataType(DataType.Date)]
        [DateRange("1913/01/01", "2013/01/01")]
        public Nullable<System.DateTime> birthday { get; set; }
        [Display(Name = "Стать")]
        public Nullable<bool> gender { get; set; }
        public int CustomerDiscont_idCustomerDiscont { get; set; }

        public virtual ICollection<Adress> adress { get; set; }
        public virtual Customerdiscont customerdiscont { get; set; }
        public virtual ICollection<Purchase> purchase { get; set; }
    }
}
